# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-20.04'

steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : init'
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/_linh5847_azureresourcegroup'
    commandOptions: '-backend=true -backend-config=backend.tfvars'
    backendServiceArm: AzRmDevOpsCon
    backendAzureRmResourceGroupName: vntechsol
    backendAzureRmStorageAccountName: vntechsolterraform
    backendAzureRmContainerName: vntechsolterraformstate
    backendAzureRmKey: 'azure/resource_group/dev/terraform.tfstate'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : apply'
  inputs:
    command: apply
    workingDirectory: '$(System.DefaultWorkingDirectory)/_linh5847_azureresourcegroup'
    commandOptions: '-lock=true -refresh=true -auto-approve -var-file=vars.tfvars'
    environmentServiceNameAzureRM: AzRmDevOpsCon